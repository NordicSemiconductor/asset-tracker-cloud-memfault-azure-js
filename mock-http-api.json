{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "2.0.0.0",
  "parameters": {
    "storageAccountName": {
      "type": "string",
      "minLength": 3,
      "metadata": {
        "description": "Specifies the storage account name to use, which is globally unique."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "mockHttpApiStorageAccountId": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2019-08-01",
      "name": "[concat(parameters('storageAccountName'), 'Serverfarm')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {
        "name": "[concat(parameters('storageAccountName'), 'Serverfarm')]",
        "computeMode": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2019-08-01",
      "name": "[concat(parameters('storageAccountName'), 'Functions')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', concat(parameters('storageAccountName'), 'Serverfarm'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', concat(parameters('storageAccountName'), 'Serverfarm'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'),';AccountKey=', listKeys(variables('mockHttpApiStorageAccountId'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'),';AccountKey=', listKeys(variables('mockHttpApiStorageAccountId'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~14"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "STORAGE_ACCESS_KEY",
              "value": "[listKeys(variables('mockHttpApiStorageAccountId'), '2019-04-01').keys[0].value]"
            },
            {
              "name": "STORAGE_ACCOUNT_NAME",
              "value": "[parameters('storageAccountName')]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', concat(parameters('storageAccountName'), 'Insights')), '2015-05-01').InstrumentationKey]"
            }
          ],
          "use32BitWorkerProcess": false,
          "cors": {
            "allowedOrigins": ["*"],
            "supportCredentials": false
          },
          "http20Enabled": true,
          "ftpsState": "Disabled"
        },
        "httpsOnly": true
      },
      "resources": [
        {
          "apiVersion": "2019-08-01",
          "name": "web",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', concat(parameters('storageAccountName'), 'functions'))]"
          ],
          "properties": {
            "siteAuthEnabled": false
          }
        }
      ]
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2018-05-01-preview",
      "name": "[concat(parameters('storageAccountName'), 'Insights')]",
      "location": "[parameters('location')]",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('storageAccountName'))]": "Resource"
      },
      "properties": {
        "ApplicationId": "[parameters('storageAccountName')]",
        "Request_Source": "IbizaWebAppExtensionCreate"
      }
    },
    {
      "name": "[concat(parameters('storageAccountName'), '/default')]",
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2019-06-01",
      "properties": {
        "cors": {
          "corsRules": [
            {
              "allowedOrigins": ["*"],
              "allowedMethods": ["PUT", "GET", "POST"],
              "maxAgeInSeconds": 0,
              "exposedHeaders": ["*"],
              "allowedHeaders": ["*"]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "resources": []
    },
    {
      "name": "[concat(parameters('storageAccountName'),'/default/','Requests')]",
      "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
      "apiVersion": "2019-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageAccountName'), 'default')]"
      ]
    },
    {
      "name": "[concat(parameters('storageAccountName'),'/default/','Responses')]",
      "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
      "apiVersion": "2019-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/tableServices', parameters('storageAccountName'), 'default')]"
      ]
    }
  ]
}
